#!/usr/bin/env bash

readonly INVALID_USAGE_ERROR_CODE=1
readonly NONZERO_EDITOR_ERROR_CODE=2

if [ "$EDITOR" != "vim" ] && [ "$EDITOR" != "nvim" ]; then
    echo "Environment variable EDITOR is not set to vim or nvim." >&2
    exit $INVALID_USAGE_ERROR_CODE
fi

if [[ "$@" == *"chat"* ]]; then
    >&2 echo "You cannot use chat flag in vi-llm as vi-llm already used for chat."
    exit $INVALID_USAGE_ERROR_CODE
fi

function edit_with_editor() {
    local tmpfile
    tmpfile=$(mktemp)
    read -t 0 && cat > "$tmpfile"

    $EDITOR + "$tmpfile" < /dev/tty > /dev/tty 2>&1 &&
    cat "$tmpfile" &&
    rm -f "$tmpfile"
}

function check_editor_exit_code() {
    if [[ $? -ne 0 ]]; then
        >&2 echo "editor exited non-zero, aborting"
        exit $NONZERO_EDITOR_ERROR_CODE
    fi
}

prompt=$(edit_with_editor)
check_editor_exit_code

echo "Prompt: $prompt"
echo -n "Response: "
echo "$prompt" | llm "$@"

while true; do
    raw_logs=$(llm logs list -c)

    parsed_logs=$(echo -e "$raw_logs \n\n## Insert your message below:\n\n")

    edited_logs=$(echo "$parsed_logs" | edit_with_editor)
    check_editor_exit_code

    prompt=$(diff <(echo "$edited_logs") <(echo "$parsed_logs")\
        | grep "<"\
        | sed 's/< //'
    )

    if [[ -z "$prompt" ]]; then
        echo "Prompt is empty, aborting"
        exit $INVALID_USAGE_ERROR_CODE
    fi

    echo "Prompt: $prompt"
    echo -n "Response: "
    echo "$prompt" | llm -c
done
